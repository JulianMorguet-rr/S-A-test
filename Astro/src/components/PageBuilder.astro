---

export interface Props {
	pageContent: {
        _type: string;
        heading?: string;
        title?: string;
        tagline?: string;
        image?: any;
        text?: string;
        excerpt?: string;
        switchImageToRightSide?: boolean;
        images?: Array<any>;
        subheading?: string;
    }
};

const data = Astro.props as Props;

// URL builder
import { urlFor } from '../lib/sanityApi.js';

// Calc ImageGallerie width
let imageGalleryWidth = 1092 / 3 - 15;
let roundetImageGalleryWidth = Math.floor(imageGalleryWidth);

---

<section>

    {data.pageContent._type === 'hero' && 
        <div class={data.pageContent._type} style={{backgroundImage: `url(${urlFor(data.pageContent.image).width(2400).format('webp').url()})`}}>
            <h1><span class="text-gradient">{data.pageContent.heading}</span></h1>
            <h3>{data.pageContent.tagline}</h3>
        </div>
    }
    
    {data.pageContent._type === 'textWithIllustration' &&  
        <div>
            {data.pageContent.switchImageToRightSide === false && 
                <div class="flexbox column">
                    <img src={urlFor(data.pageContent.image).width(590).height(300).format('webp').url()}/>
                    <div class="text-content">
                        <h2>{data.pageContent.heading}</h2>
                        <h3>{data.pageContent.tagline}</h3>
                        <p>{data.pageContent.text}</p>
                        <p>{data.pageContent.excerpt}</p>
                        <p>{data.pageContent.switchImageToRightSide}</p>
                    </div>
                </div>
            }
            {data.pageContent.switchImageToRightSide === true && 
                <div class="flexbox column">
                    <div class="text-content">
                        <h2>{data.pageContent.heading}</h2>
                        <h3>{data.pageContent.tagline}</h3>
                        <p>{data.pageContent.text}</p>
                        <p>{data.pageContent.excerpt}</p>
                        <p>{data.pageContent.switchImageToRightSide}</p>
                    </div>
                    <img src={urlFor(data.pageContent.image).width(590).height(300).format('webp').url()}/>
                </div>
            }
        </div>
    }
    
    {data.pageContent._type === 'gallery' &&  
        <div> 
            <h2>{(data.pageContent.heading)}</h2>
            <h4>{data.pageContent.subheading}</h4>
            {/* <p>{JSON.stringify(data.pageContent)}</p> */}
            {/* <pan>imageGalleryWidth: {imageGalleryWidth}</pan> 
            <span>
                {
                    data.pageContent.images.map(image => (
                        image.asset._ref
                    ))
                }
            </span>
            */}
            <div class="flexbox column">
                {
                    data.pageContent.images.map(image => {
                        return <div class="galleryItem">
                                <img src={urlFor(image).width(roundetImageGalleryWidth).height(300).format('webp').url()} alt={image.alt}/>
                            </div>
                        
                        // console.log('image.asset: ', image.asset._ref)
                        // <p>Image:</p>
                        // <p>image.asset</p>
                    })
                }
            </div>
        </div>
    }
    
    {data.pageContent._type === 'form' &&  
        <h3> {JSON.stringify(data.pageContent)}</h3>
    }
    <!-- && form == 'newsletter' -->

    <script>
        let contentWidth = document.querySelector('main').style.width
        console.log(contentWidth)
    </script>

</section>

<style>
    main section:first-child {
		margin-top: 0 !important;
	}

    section:first-child {
        margin-top: 0 !important;
        padding-top: 0px;
    }

    section {
        display: flex;
        flex-direction: column;
        /* justify-content: center;
        align-items: center; */
        width: 100%;
        height: auto;
        padding: 2rem 0;
    }

    .hero {
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        width: 100%;
        height: auto;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        color: white;
        padding: 24rem 0 6rem 0;
        margin-left: -50vw;
        left: 50%;
        width: 100vw;
        position: relative;
    }

    .hero h1 {
        font-size: 3rem;
        margin-bottom: 1rem;
    }

    .hero h3 {
        font-size: 1.5rem;
    }

    

</style>