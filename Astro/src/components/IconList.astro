---

// Import Node Modules
import { urlFor } from '../lib/sanityApi.js';
import { marked } from 'marked';

// Import Composables 
import { convertBlockContentToHTML } from '../composables/blockContentToHTML';
// import VideoPersist from './media/VideoPersist.astro';
import { Image } from 'astro:assets';

const { data } = Astro.props // as { pageBuilder: ContentItem };

const content = convertBlockContentToHTML(data.blockContent);

---


<div class="icon-grid bg-white dark:bg-gray-900">

    <!-- <p>{ JSON.stringify(data.iconItems) }</p> -->

    <div class="py-8 px-4 mx-auto max-w-screen-xl sm:py-16 lg:px-6">
        <div class={`mb-8 lg:mb-16 ${data.isCentered ? 'text-center' : ''}`}>
            { data.tagline &&
                <p class="section-tagline text-gray-500 sm:text-xl">{ data.tagline }</p>
            }
            { data.heading &&
                <h2 class="section-heading mb-4 text-4xl tracking-tight font-extrabold text-gray-900">{ data.heading }</h2>
            }
            { content &&
                <div class="section-block-content mb-6 font-light text-gray-500 md:text-lg" set:html={content}></div>
            }
            
        </div>
        <div class={`space-y-8 md:gap-12 md:space-y-0 ${!data.isCentered ? 'md:grid md:grid-cols-2 lg:grid-cols-3' : 'lg:flex flex-wrap md:justify-center'}`}>

            { 
                data.iconItems && data.iconItems.map((item, index) => (
                    <div class={`section-icon-content ${!data.isCentered ? '' : 'flex-item'}`}>
                        <div class="flex justify-start items-center mb-8 w-auto h-12 rounded-full bg-primary-100 lg:h-20 lg:w-auto dark:bg-primary-900">
                            {
                                // <img src={urlFor(item.icon).width(80).height(80).format('webp').url()} >
                                // check if icon is an image or an svg icon
                                // <p>item.icon:  | { urlFor(item.icon) }</p>
                                <img src={urlFor(item.icon).width(80).height(80).url()} style="max-height: 80px;" >
                            }
                        </div>
                        <h3 class="mb-2 text-xl font-bold dark:text-white">{item.heading}</h3>
                        <div class="mb-6 font-light text-gray-500 md:text-lg" set:html={convertBlockContentToHTML(item.text)}></div>
                    </div>
                ))
            }
            
        </div>
    </div>
</div>

<style lang="scss">


.flex-item {
  flex: 0 0 calc(33.333% - 3rem);
}
  
</style>