---

import { fade, slide  } from 'astro:transitions';

// export interface TransitionAnimation {
//   name: string; // The name of the keyframe
//   delay?: number | string;
//   duration?: number | string;
//   easing?: string;
//   fillMode?: string;
//   direction?: string;
// }

// export interface TransitionAnimationPair {
//   old: TransitionAnimation | TransitionAnimation[];
//   new: TransitionAnimation | TransitionAnimation[];
// }

// export interface TransitionDirectionalAnimations {
//   forwards: TransitionAnimationPair;
//   backwards: TransitionAnimationPair;
// }

const anim = {
  old: {
    name: 'fadeIn',
    duration: '7.2s',
    easing: 'linear',
    fillMode: 'forwards',
  },
  new: {
    name: 'fadeOut',
    duration: '4.3s',
    easing: 'linear',
    fillMode: 'backwards',
  }
};

const myFade = {
  forwards: anim,
  backwards: anim,
};

// URL builder
import { urlFor } from '../lib/sanityApi.js';
import { Image } from 'astro:assets';

interface ReferenceToPage {
    _type: 'reference';
    slug: string;
    heroImage: {
        _type: 'image';
        asset: {
            _ref: string;
        }
    }
  }

type JustAnImage =  { 
    _type: 'justAnImage'; 
    tagline?: string;
    heading?: string; 
    centerText: boolean;
    useCustomColorGradient?: boolean;
    customColorGradient?: {
      color1: string;
      color2: string;
    }
    text: string; 
    image: any;
    referenceToPage: ReferenceToPage;
    alt?: string;
}


export interface Props {
	data: JustAnImage
};
const data = Astro.props as Props


const customGradientStyle = data.data.useCustomColorGradient 
    ? `background: linear-gradient(45deg, ${data.data.customColorGradient?.color1} -20%, ${data.data.customColorGradient?.color2} 80%); -webkit-text-fill-color: transparent; background-clip: text;`
    : '';

const centerTextStyle = data.data.centerText 
    ? 'text-align: center;'
    : '';

---


<div class="py-8 px-4 mx-auto max-w-screen-xl sm:py-16 lg:px-6">
  <div style={centerTextStyle}>
    {
      data.data.tagline && <h2 class="section-tagline mb-4 md:text-lg text-gray-600 font-bold">{ data.data.tagline}</h2>
    }
    {
      data.data.heading && 
      <h2
        class="section-heading mb-4 text-4xl tracking-tight text-gray-900"
        style={customGradientStyle}
      >
        { data.data.heading}
      </h2>
    }
  </div>


  <div class="section-asset pt-4">
    <img src={urlFor(data.data.image).width(1280).format('webp').url()} alt={data.data.alt} />
  </div>


      <!-- <p>{JSON.stringify(data.data.referenceToPage)}</p> -->
        <!-- <h2>{data.data.referenceToPage.slug}</h2> -->

        <!-- <Image 
            width={'1280'}
            height={'200'}
            src={urlFor(data.data.referenceToPage.heroImage).width(600).height(200).format('webp').url()} 
            alt={'just a test'}
        /> -->
    
</div>