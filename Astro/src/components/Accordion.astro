---
import BlockContent from "./BlockContent.astro";

const { item, index, pageBuilder } = Astro.props;

---

<!--
<div class="tab ">
    <div class="inner-wrapper block">
        <input type="checkbox" id={item._key} name="accordion-checkbox" hidden/>
        <label class="accordion-header flex" for={item._key}>
            <div class="headings">
                {
                    item.tagline && <p>{item.tagline}</p>
                }
                {
                    item.heading && <h3 class="text-3xl py-0 my-0 tracking-tight text-gray-900">{item.heading}</h3>
                }
                {
                    item.icon && <div class="accordion-icon"></div>
                }
            </div>
            <div class="toggle-icon">
                <span></span>
                <span></span>
            </div>
        </label>
        <div class="tab__content accordion-body">
            <BlockContent data={pageBuilder.blockContent} />
        </div>
    </div>
</div>
 -->


<div>
  <h2 id={`accordion-flush-heading-${index}`}>
      <button 
        type="button" 
        class="flex justify-between items-center py-5 w-full font-medium text-left text-gray-900 bg-white border-b border-gray-200 dark:border-gray-700 dark:bg-gray-900 dark:text-white" 
        data-accordion-target={`#accordion-flush-body-${index}`} 
        aria-expanded={index === 0 ? "true" : "false"} 
        aria-controls={`accordion-flush-body-${index}`}>
            <div>
              {
                item.tagline && <p>{item.tagline}</p>
              }
              {
                item.heading && <h3 class="text-3xl py-0 my-0 tracking-tight text-gray-900">{item.heading}</h3>
              }
              {
                item.icon && <div class="accordion-icon"></div>
              }
            </div>
          <svg data-accordion-icon="" class="w-6 h-6 rotate-180 shrink-0" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
      </button>
  </h2>
  <div id={`accordion-flush-body-${index}`} class="" aria-labelledby={`accordion-flush-heading-${index}`}>
      <div class="py-5 border-b border-gray-200 dark:border-gray-700">
        <BlockContent data={pageBuilder.blockContent} />
        <!-- <p class="mb-2 text-gray-500 dark:text-gray-400">Flowbite is an open-source library of interactive components built on top of Tailwind CSS including buttons, dropdowns, modals, navbars, and more.</p>
        <p class="text-gray-500 dark:text-gray-400">Check out this guide to learn how to <a href="#" class="text-primary-600 dark:text-primary-500 hover:underline">get started</a> and start developing websites even faster with components on top of Tailwind CSS.</p> -->
      </div>
  </div>

</div>


<style lang="scss"> 


/* Core styles btw. functionality */

.tab input {
  position: absolute;
  opacity: 0;
  z-index: -1;
}
.tab__content {
  max-height: 0;
  overflow: hidden;
  transition: all 0.35s;
}
.tab input:checked ~ .tab__content {
  max-height: 10rem;
}

/* Visual styles */
.accordion {
  color: var(--theme);
  overflow: hidden;
}
.tab__label,
.tab__close {
  display: flex;
  color: white;
  background: var(--theme);
  cursor: pointer;
}
.tab__label {
  justify-content: space-between;
  padding: 1rem;
}
.tab__label::after {
  content: "\276F";
  width: 1em;
  height: 1em;
  text-align: center;
  transform: rotate(90deg);
  transition: all 0.35s;
}
.tab input:checked + .tab__label::after {
  transform: rotate(270deg);
}
.tab__content p {
  margin: 0;
  padding: 1rem;
}
.tab__close {
  justify-content: flex-end;
  padding: 0.5rem 1rem;
  font-size: 0.75rem;
}
/* Arrow animation */
.tab input:not(:checked) + .tab__label:hover::after {
  animation: bounce .5s infinite;
}
@keyframes bounce {
  25% {
    transform: rotate(90deg) translate(.25rem);
  }
  75% {
    transform: rotate(90deg) translate(-.25rem);
  }
}




/* Own Styles */

.accordion-header {
    cursor: pointer;
    justify-content: space-between;

    .headings {
        flex-grow: 4;
    }

    .toggle-icon {
        position: relative;
        width: 40px;
        height: 40px;

        span {
            display: block;
            width: 100%;
            height: 4px;
            background: #000;
            position: absolute;
            left: 0;
            transition: all 0.35s;

            &:first-child {
                top: 50%;
                rotate: 90deg;
            }
            &:last-child {
                top: 50%;
                
            }
        }
    }
}

.tab input:checked  ~ .accordion-header {

    .toggle-icon {

        span {
            &:first-child {
                rotate: 360deg;
            }
            &:last-child {
                rotate: 180deg;
            }
        }
    }

}


.tab {

    .inner-wrapper {
        padding: 1rem 0;
        border-top: solid 2px;    
    }

    &:last-child .inner-wrapper  {
        border-bottom: solid 2px;
    }
}


</style>