---

import { urlFor } from "../../lib/sanityApi";

import Image from "astro/components/Image.astro";

// import astro props as post and contentArray
const { post, blockContent } = Astro.props

// function formatGermanDate(date) {
//   const day = date.getDate().toString().padStart(2, '0');
//   const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Monate sind 0-basiert
//   const year = date.getFullYear();

//   return `${day}.${month}.${year}`;
// }

// Format Date Options 
const formatDateOptions: Intl.DateTimeFormatOptions = { year: 'numeric', month: '2-digit', day: '2-digit' };
const formattedDate = new Intl.DateTimeFormat('de-DE', formatDateOptions).format(new Date(post.publishedAt));

const postWrapperTransitionName = `post-wrapper-${post.slug}`
const postImageTransitionName = `post-image-${post.slug}`
const postTitleTransitionName = `post-title-${post.slug}`
const postCategoryTransitionName = `post-category-${post.slug}`
const postAuthorAndDateTransitionName = `post-author-and-date-${post.slug}`

const bgColor = '#ff000'


const postTitleArray: Array<any> = post.title.split(' ')

const postTitle = () => {
    // const postTitleArray: Array<any> = []
    // let text = post.title 
    // for (let i = 0; i < text.length; i++) {
    //     if (text[i] === ' ') {
    //         postTitleArray.push('---')
    //     } else {
    //         const char = text[i];
    //         postTitleArray.push(char)
    //     }
    // }

    return postTitleArray
}


const nessesaryTransitionStyle = `

                        /*** Post Wrapper ***/

                        ::view-transition-old(${postWrapperTransitionName}),
                        ::view-transition-new(${postWrapperTransitionName}) {
                            animation: fade-to-transparent;
                            animation-duration: 0.3s;
                            mix-blend-mode: normal;
                            border-radius: 0rem;
                            /* box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1), 0px 8px 24px rgba(0, 0, 0, 0.1) */
                        }

                        @keyframes fade-to-transparent {
                            from { 
                                z-index: 9999999;
                                opacity: 1;
                                /* border-radius: 0rem; */
                                /* box-shadow: 0px 0px 0px rgba(0, 0, 0, 0), 0px 0px 0px rgba(0, 0, 0, 0); */
                            }
                            to { 
                                z-index: 9999999;
                                opacity: 1;
                                /* border-radius: 0.5rem; */
                                /* box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1), 0px 8px 24px rgba(0, 0, 0, 0.1) */
                            }
                        }



                        /*** Post Image ***/ 
                        ::view-transition-old(${postImageTransitionName}),
                        ::view-transition-new(${postImageTransitionName}) {
                            animation: initial;
                            animation-duration: 0.3s;
                            mix-blend-mode: normal;
                            height: 100%;
                            overflow: clip;
                        }

                        /* The old view is the thumbnail */
                        ::view-transition-old(${postImageTransitionName}) {
                            object-fit: contain;
                        }

                        /* The new view is the full image */
                        ::view-transition-new(${postImageTransitionName}) {
                            object-fit: cover;
                        }




                        /*** Post Title ***/ 
                        /*
                        ::view-transition-old(${postTitleTransitionName}),
                        ::view-transition-new(${postTitleTransitionName}) {
                            width: fit-content;
                        }
                        */
                        
                        



                        /*** Post Category ***/
                        
                        ::view-transition-old(${postCategoryTransitionName}),
                        ::view-transition-new(${postCategoryTransitionName}) {
                            width: fit-content;
                        }

                        /*
                            animation: none;
                            mix-blend-mode: normal;
                            height: 100%;
                            overflow: clip;
                            object-fit: cover;
                        */




                        /*** Handling Only Child ***/ 
                        
                        ::view-transition-old(${postWrapperTransitionName}):only-child,
                        ::view-transition-old(${postImageTransitionName}):only-child,
                        ::view-transition-old(${postCategoryTransitionName}):only-child,
                        ::view-transition-old(${postAuthorAndDateTransitionName}):only-child,
                        /* ::view-transition-old(${postTitleTransitionName}):only-child, */
                        ${  postTitleArray.map((char, index) => (
                            `::view-transition-old(${postTitleTransitionName}-${index}):only-child`
                            ))
                        } 
                        {
                            animation: 0.33s fade-out-down 0s ease;
                        }

                        ::view-transition-new(${postWrapperTransitionName}):only-child,
                        ::view-transition-new(${postImageTransitionName}):only-child,
                        ::view-transition-new(${postCategoryTransitionName}):only-child,
                        ::view-transition-new(${postAuthorAndDateTransitionName}):only-child,
                        /* ::view-transition-new(${postTitleTransitionName}):only-child, */
                        ${  postTitleArray.map((char, index) => (
                            `::view-transition-new(${postTitleTransitionName}-${index}):only-child`
                            ))
                        } 
                        {
                            animation: 0.66s fade-in-up ease;
                            opacity: 0;
                            translate: 0rem 5rem;
                            z-index: -1;
                        }
                        
                        @keyframes fade-in-up {
                            from {
                                opacity: 0;
                                translate: 0rem 5rem;
                                z-index: -1;
                            }
                            to {
                                opacity: 1;
                                scale: 1;
                                translate: 0rem 0rem;
                                z-index: 1;
                            }
                        }
                        @keyframes fade-out-down {
                            from {
                                opacity: 0;
                                translate: 0rem 0rem;
                            }
                            to {
                                opacity: 0;
                                translate: 0rem -5rem;
                            }
                        }



                        

                        @keyframes scale-in {
                            from {
                                opacity: 0;
                                scale: 0.5;
                                //   translate: 3rem 5rem;
                                //   rotate: -10deg;
                            }
                            to {
                                opacity: 1;
                                scale: 1;
                                // rotate: 360deg;
                            }
                        }
                        @keyframes scale-out {
                            from {
                                opacity: 1;
                                scale: 1;
                                // rotate: 360deg;
                            }
                            to {
                                opacity: 0;
                                scale: 0.5;
                                //   translate: -3rem -5rem;
                                //   rotate: -10deg;
                            }
                        }


                        

                        @keyframes initial {
                            from { 
                                opacity: 1;
                            }
                        }
                        
                        @keyframes transformation {
                            from { 
                                opacity: 1;
                            }
                        }

                        @keyframes r-in {
                            from { 
                                mix-blend-mode: normal;
                                rotate: 360deg;
                            }
                        }


                        @keyframes slide-from-right {
                            from { transform: translateX(30px); }
                        }

                        @keyframes slide-to-left {
                            to { transform: translateX(-30px); }
                        }



                        
                    `


---


<article 
    class="base-shadow p-4 bg-white rounded-lg shadow-md"
    style={`    
        view-transition-name: ${postWrapperTransitionName}; 
        animation-duration: 5000ms;
        animation-timing-function: ease-in-out;
    `}
>
<!-- 
        style={`    
            view-transition-name: ${postWrapperTransitionName}; 
            animation-duration: 5000ms;
            animation-timing-function: ease-in-out;
        `}
-->

    <!-- <h2>{postImageTransitionName}</h2> -->

    {   post.mainImage &&
            <a rel="prefetch" href={`/blog/${post.slug}`} class="w-full">
                <img 
                    id={`post-image-${post.slug}`}
                    width={360}
                    height={240}
                    src={urlFor(post.mainImage).width(356).height(174).format('webp').url()}
                    alt="Jese Leos avatar"
                    class="image-transition w-full mb-5 rounded-lg"
                    style={`view-transition-name: ${postImageTransitionName}; view-transition-duration: 5000ms; view-transition-timing-function: ease-in-out;`} 
                />
                <!--

                    transition:name={postImageTransitionName}
                    transition:animate="initial" 

                    style="view-transition-duration: 5000ms; view-transition-timing-function: ease-in-out;"
                    style={`view-transition-name: ${postImageTransitionName}; view-transition-duration: 5000ms; view-transition-timing-function: ease-in-out;`}
                       
                -->
            </a>
    }

    <!-- <p>{`post-image-${post.slug}`}</p> -->

    <div class="category-wrapper">
        <div class="categories self-start"
            style={`    
                view-transition-name: ${postCategoryTransitionName}; 
                animation-duration: 5000ms;
                animation-timing-function: ease-in-out;
            `}
        >
        <!--
            transition:name={postCategoryTransitionName}
            transition:animate="initial"   
        -->
            {   post.categories ?
                    post.categories.map((category, index) => (
                        <a href={`/blog/category/${category}`}>
                            <span class="bg-dsv-orange border-dsv-orange text-white self-start text-xs font-semibold mr-2 px-2.5 py-1 rounded">
                                {category}
                            </span>
                        </a>
                    )) 
                :
                    <span class="bg-dsv-orange border-dsv-orange text-white self-start text-xs font-semibold mr-2 px-2.5 py-1 rounded">
                        Keine Kategorie
                    </span>
                    
            }
        </div>
    </div>

    <!-- [data-vt-text] -->

    {
        post.title && 
            <div 
                class="post-title-wrapper flex justify-center"
                transition:name={`${postTitleTransitionName}`}
            >
                <div class="post-title self-center">
                    <a href={`/blog/${post.slug}`}>
                        <h2 
                            class="post-title self-start font-bold text-gray-900 mb-0"
                        >
                            <!-- 
                                data-vt-text={postTitleTransitionName}

                                style={`view-transition-name: ${postTitleTransitionName}`}

                                transition:name={postTitleTransitionName}
                                transition:animate="initial"
                            -->
                            
                            {   
                                post.title && 
                                    postTitleArray.map((char, index) => (
                                        <span 
                                            transition:animate="initial"
                                            transition:name={`${postTitleTransitionName}-${index}`}
                                        >
                                            {char}
                                        </span>
                                        <span 
                                        >
                                            &nbsp;
                                        </span>
                                    ))
                            }

                            <!--
                            {
                                post.title
                            }
                            -->
                            
                        </h2>
                    </a>
                </div>
            </div>
    }


    {
        post.customString &&
            <p class="mb-4 font-light text-gray-500">
                {post.customString}
            </p>      
    }
    
    <!-- {
        !post.customString &&
            blockContent.blockContent &&
                <div class="mb-4 font-light text-gray-500" set:html={blockContent.blockContent}></div>
    } -->


    <div class="author-and-date self-start flex space-x-4"
        transition:animate="initial"
        transition:name={postAuthorAndDateTransitionName}
    >
    {
        post.author?.authorImagepost.author?.firstName ?
        (
            <Image 
                width={40}
                height={40}
                class="w-10 h-10 rounded-full" 
                src={urlFor(post.author.authorImage).width(40).height(40).format('webp').url()}
                alt="Jese Leos avatar"
            />
            <div class="font-medium">
                <div>{post.author?.firstName} {post.author?.lastName}</div>
                <div class="text-sm font-normal text-gray-500">{new Date(post.publishedAt).toLocaleDateString('de-DE', formatDateOptions)}</div>
            </div>
        )
        : 
        <div class="font-medium">
            <div class="text-sm font-normal text-gray-500">{new Date(post.publishedAt).toLocaleDateString('de-DE', formatDateOptions)}</div>
        </div>
    }
    </div>


    <style set:html={nessesaryTransitionStyle}></style>
</article>


<style lang="scss">

    .post-title-wrapper {
        padding: 18px 0px;
        width: 100%;
        justify-content: flex-start;
    
        .post-title {

            display: flex;
            justify-content: center;
            align-items: center;

            a {

                &:hover {
                    text-decoration: none;
                }
 
                h2 {
                    font-size: 20px;
                    line-height: 30px;
                    padding: 0px 0;
                    display: flex;
                    justify-content: flex-start;
                    flex-wrap: wrap; /* Hier setzen Sie flex-wrap auf wrap */
                    text-align: left;
                    overflow: auto;

                    span {
                        text-align: left;
                    }
                }
            }
        }
    }
</style>

<!-- <style is:inline define:vars={{ postImageTransitionName, bgColor }}> -->
<style>
/**
* View-Transition for initial 
*/


article {
    display: flex;
    flex-direction: column;
    align-items: flex-start
}

article:focus-within {
    z-index: 9999999;
}


.category-wrapper {
    width: 100%;
}

/* article .categories, article .categories span {
    contain: layout;
    display: inline-block;
} */

/* article .categories span {
    display: inline-block;
} */
    


.text-transition {
    transition: all 0.33s ease-in-out;
}

.author-and-date {
    /* align-self:last baseline; */
    margin-top: auto;
    text-align: left;
}



/**
* View-Transition for post image
*/

.image-transition ::view-transition-old(*),
.image-transition ::view-transition-new(*) {
    animation-duration: 0.33s;
    /* animation: none; */
    mix-blend-mode: normal;
    height: 100%;
    overflow: clip;
    animation-name: rotate-in-out;
}

.image-transition ::view-transition-old(*) {
    object-fit: contain;
}

.image-transition ::view-transition-new(*) {
    object-fit: cover;
}

@keyframes rotate-in-out {
from {
        rotate: 0deg;
    }
    to {
        rotate: 180deg;
    }
}



.text-transition::view-transition-old(*),
.text-transition::view-transition-new(*) {
    animation-duration: 0.66s;
    animation-name: rotate-in-out;
    width: fit-content;
}

.text-transition::view-transition-old(*) {
}

.text-transition::view-transition-new(*) {
}


</style>

